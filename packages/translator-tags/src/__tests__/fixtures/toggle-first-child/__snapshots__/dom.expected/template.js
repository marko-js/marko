export const _template_ = "<div><!><span></span><span></span></div>";
export const _walks_ = /* next(1), replace, out(1) */"D%l";
export const _setup_ = () => {};
import { data as _data, createRenderer as _createRenderer, closure as _closure, registerRenderer as _registerRenderer, conditional as _conditional, inConditionalScope as _inConditionalScope, intersections as _intersections, value as _value, createTemplate as _createTemplate } from "@marko/runtime-tags/debug/dom";
const _value$ifBody = /* @__PURE__ */_closure("value", (_scope, value) => _data(_scope["#text/0"], value));
const _ifBody = _registerRenderer("packages/translator-tags/src/__tests__/fixtures/toggle-first-child/template.marko_1_renderer", /* @__PURE__ */_createRenderer("<span> </span>", /* next(1), get */"D ", void 0, [_value$ifBody]));
const _if = /* @__PURE__ */_conditional("#text/0");
export const _value_ = /* @__PURE__ */_value("value", (_scope, value) => _if(_scope, value ? _ifBody : null), _intersections([_if, _inConditionalScope(_value$ifBody, "#text/0")]));
export const _input_ = /* @__PURE__ */_value("input", (_scope, input) => _value_(_scope, input.value), _value_);
export const _params__ = /* @__PURE__ */_value("_params_", (_scope, _params_) => _input_(_scope, _params_[0]), _input_);
export default /* @__PURE__ */_createTemplate(/* @__PURE__ */_createRenderer(_template_, _walks_, _setup_, void 0, void 0, _params__), "packages/translator-tags/src/__tests__/fixtures/toggle-first-child/template.marko");